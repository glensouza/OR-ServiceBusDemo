name: Provision Infrastructure Test

on:
  push:
    branches:
      - "main" 
    paths:
      - "Infrastructure/**"
      - ".github/workflows/bicepTest.yml"
  workflow_dispatch:

jobs:
  provision-service-bus:
    runs-on: ubuntu-latest
    steps:

      # Checkout code
    - uses: actions/checkout@main

      # Log into Azure
    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Provision Resources
      uses: azure/arm-deploy@v1
      id: deploy
      with:
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ secrets.AZURE_RG }}
        scope: resourcegroup
        template: ./Bicep/staticwebapp.v3.bicep
        failOnStdErr: false
        deploymentName: bicep-test-ci

    - name: Validate Hostname
      run: echo ${{ steps.deploy.outputs.defaultHostname }}

    - name: Secrets to Key Vault
      uses: azure/powershell@v1
      env:
        POWERSHELL_TELEMETRY_OPTOUT: 1
      with:
        inlineScript: |
          $sqlConnectionString = (az keyvault secret show --vault-name <keyVaultName> --name <secret-name> --query [value] --output tsv)
          echo ::set-output name=sqlConnectionString::$( $sqlConnectionString)
        azPSVersion : '3.1.0'

    - name: Validate Hostname
      run: echo ${{ steps.deploy.outputs.defaultHostname }}

    - name: Secrets to Key Vault
      uses: azure/powershell@v1
      with:
        inlineScript: |
          $sqlConnectionString = (az keyvault secret show --vault-name <keyVaultName> --name <secret-name> --query [value] --output tsv)
          echo ::set-output name=sqlConnectionString::$( $sqlConnectionString)
        azPSVersion : 'latest'


    - run: ./myscript.ps1
      shell: pwsh 

    - name: Run a one-line script
      env:
        APIKey: ${{ secrets.APIKey }}
        ZoneId: ${{ secrets.ZoneId }}
      run: ./Bicep/dns.ps1
      shell: powershell
